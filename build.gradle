plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'xyz.nifti'
version '1.2.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    // Spigot API
    compileOnly 'org.spigotmc:spigot-api:1.14.4-R0.1-SNAPSHOT'
}


task testJar(type: Jar) {
    from sourceSets.main.output.classesDirs
    from('src/test/resources') {
        include '**'
    }

    archiveBaseName.set("NiftiGUITest")
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.java.sourceDirectories
}

task classesJar(type: Jar) {
    from sourceSets.main.output.classesDirs
}

task documentation(type: Javadoc) {
    source = sourceSets.main.java.sourceDirectories
    classpath += configurations.compileClasspath

    options.memberLevel = JavadocMemberLevel.PRIVATE
}

task javadocJar(type: Jar, dependsOn: documentation) {
    archiveClassifier.set('javadoc')
    from documentation.destinationDir
}

artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}

tasks.withType(Zip) { task ->
    task.doLast {
        ant.checksum file: it.archivePath
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        mavenLocal()

        //maven {
        //    credentials {
        //        username "$devUser"
        //        password "$devPassword"
        //    }
        //    // url to the releases maven repository
        //    url "https://${political_repository}/repository/niftiutils/"
        //}
    }
}
